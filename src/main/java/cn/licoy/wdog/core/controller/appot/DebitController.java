package cn.licoy.wdog.core.controller.appot;import cn.licoy.wdog.common.annotation.SysLogs;import cn.licoy.wdog.common.bean.ResponseCode;import cn.licoy.wdog.common.bean.ResponseResult;import cn.licoy.wdog.common.controller.AppotBaseController;import cn.licoy.wdog.common.util.AppotUtils;import cn.licoy.wdog.core.dto.appot.DebitAddDTO;import cn.licoy.wdog.core.entity.appot.Debit;import cn.licoy.wdog.core.service.appot.DebitService;import io.swagger.annotations.Api;import com.alibaba.fastjson.JSONObject;import io.swagger.annotations.ApiOperation;import io.swagger.annotations.ApiParam;import org.apache.commons.lang3.time.DateFormatUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.Date;import java.util.List;/** * @author mc * @version Sat Nov 07 19:53:37 2020 */@RestControllerpublic class DebitController extends AppotBaseController {   @Autowired   private DebitService service;   public DebitService getService() {      return service;   }   @RequestMapping(value = {"/getDebit"})   public ResponseResult getDebit(String cash,String creditcard,String alldebit){      List result =  jdbcTemplate.queryForList("" +              "select \n" +              " a1.datee\n" +              ",FORMAT((a1.all_debit-a2.all_debit),2) diff_amt , FORMAT(a1.cash,2) cash,FORMAT(a1.all_debit,2) all_debit\n" +              " from (\n" +              "  select (@i:=@i+1) as RowNum,md.* from biz_appot.mc_debit md,(Select @i:=0) B order by datee desc\n" +              ")a1,( " +              " select (@i1:=@i1+1) as RowNum,md.* from biz_appot.mc_debit md,(Select @i1:=0) B order by datee desc\n" +              ")a2 " +              " where a1.RowNum = a2.RowNum-1;" +              "");      return ResponseResult.e(ResponseCode.OK,result);   }   @RequestMapping(value = {"/saveDebit"})   public ResponseResult saveDebit(String cash,String creditcard,String alldebit){      List<Debit> debits = service.queryDebitByDate(DateFormatUtils.format(new Date(),"yyyy-MM-dd"));      Debit debit = null;      if(debits.size()>0){         debit = debits.get(0);      }else{         debit = new Debit();         debit.setId(AppotUtils.getPIdFromUUID());         debit.setDatee(DateFormatUtils.format(new Date(),"yyyy-MM-dd"));      }      debit.setCash(cash);      debit.setAllDebit(alldebit);      debit.setCreditcard(creditcard);      service.insertOrUpdate(debit);      List result =  jdbcTemplate.queryForList("" +              "select \n" +              " a1.datee\n" +              ",FORMAT((a1.all_debit-a2.all_debit),2) diff_amt , FORMAT(a1.cash,2) cash,FORMAT(a1.all_debit,2) all_debit\n" +              " from (\n" +              "  select (@i:=@i+1) as RowNum,md.* from biz_appot.mc_debit md,(Select @i:=0) B order by datee desc\n" +              ")a1,( " +              " select (@i1:=@i1+1) as RowNum,md.* from biz_appot.mc_debit md,(Select @i1:=0) B order by datee desc\n" +              ")a2 " +              " where a1.RowNum = a2.RowNum-1;" +              "");   return ResponseResult.e(ResponseCode.OK,result);   }}