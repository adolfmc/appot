package cn.licoy.wdog.core.controller.appot;import cn.licoy.wdog.common.annotation.SysLogs;import cn.licoy.wdog.common.bean.ResponseCode;import cn.licoy.wdog.common.bean.ResponseResult;import cn.licoy.wdog.common.controller.AppotBaseController;import cn.licoy.wdog.common.util.AppotUtils;import cn.licoy.wdog.core.dto.appot.OrderAddDTO;import cn.licoy.wdog.core.entity.appot.Order;import cn.licoy.wdog.core.entity.appot.OrderDetail;import cn.licoy.wdog.core.service.appot.OrderDetailService;import cn.licoy.wdog.core.service.appot.OrderService;import io.swagger.annotations.Api;import com.alibaba.fastjson.JSONObject;import io.swagger.annotations.ApiOperation;import io.swagger.annotations.ApiParam;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.math.BigDecimal;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;/** * @author mc * @version Tue Sep 22 20:21:35 2020 */@RestController@RequestMapping(value = {""})@Api(tags = {"Order"})public class OrderController  extends AppotBaseController {   @Autowired   private OrderService service;   @Autowired   private OrderDetailService orderDetailService;   public OrderService getService() {      return service;   }   @RequestMapping(value = {"/getOrdersByOpenid"})   public ResponseResult getOrdersByOpenid(HttpServletRequest request, HttpServletResponse response,String status,String openid){      List<Order> orders = service.getOrdersByOpenid(openid,status);      return ResponseResult.e(ResponseCode.OK ,orders) ;   }   @RequestMapping(value = {"/getOrderById"})   public ResponseResult getOrderById(HttpServletRequest request, HttpServletResponse response,String orderid){      Order order = service.getOrderById(orderid);      return ResponseResult.e(ResponseCode.OK ,order) ;   }   @RequestMapping(value = {"/getOrderDetailsByOrderId"})   public ResponseResult getOrderDetailsByOrderId(HttpServletRequest request, HttpServletResponse response,String order_id){      Map<String ,Object> result = new HashMap();      result.put("order",service.selectById(order_id));      result.put("orderDetails",orderDetailService.getOrderDetailsByOrderId(order_id));      return ResponseResult.e(ResponseCode.OK ,result ) ;   }   @RequestMapping(value = {"/sendOrder"})   public ResponseResult sendOrder(HttpServletRequest request, HttpServletResponse response           , String siteNo , String stime , String etime           , String price , String time , String venueId           , String siteName , String sportType , String siteId           , String productId , String isHalf,String openId ,String mobile,String venueName   )  {//            response.sendRedirect("http://www.yushangcc.com:8010/getInfoByDateFromDCYumaoqiu?datee="+datee);         //1 判断是否注册，跳转注册//         TODO         //2 判断是否登录，跳转登录//         TODO         //3 保存订单信息（预申请订单）         Order order = new Order();         String order_id = AppotUtils.getPIdFromUUID();         String[] siteNos = siteNo.split(",");         String[] siteNames = siteName.split(",");         String[] stimes = stime.split(",");         String[] etimes = etime.split(",");         String[] prices = price.split(",");         for(int i=0;i<siteNos.length;i++){            OrderDetail orderDetail = new OrderDetail();            orderDetail.setCreateDate(new Date());            orderDetail.setId(AppotUtils.getPIdFromUUID());            orderDetail.setOrderId(order_id);            orderDetail.setVenueId(venueId);            orderDetail.setSiteNo(siteNos[i]);            orderDetail.setSiteName(siteNames[i]);            orderDetail.setAppotDate(time);            orderDetail.setStime(stimes[i]);            orderDetail.setEtime(etimes[i]);            orderDetail.setSitePrice(prices[i]);            orderDetail.setVenueName(venueName);            orderDetailService.insert(orderDetail);         }        order.setId(order_id);        order.setProductId(productId);        order.setSiteId(siteId);        order.setSportType(sportType);        order.setIsHalf(isHalf);        order.setMobile(mobile);        order.setStatus("0");        order.setCreateDate(new Date());        order.setOpenid(openId);        order.setVenueId(venueId);        order.setPrice(new BigDecimal(prices[0]));        order.setNumbers(siteNos.length);        order.setAppotDate(time);        order.setVenueName(venueName);         order.setTotalAmount(order.getPrice().multiply(  new BigDecimal(order.getNumbers()) ));         service.insert(order);//         response.sendRedirect(base_url+"/static/home.html?whichPage=ck_show_order&order_id="+order_id);         return ResponseResult.e(ResponseCode.OK ,order ) ;   }   @PostMapping(value = {"/saveOrder"})   @ApiOperation(value = "saveOrder")   @SysLogs("saveOrder")   public ResponseResult saveOrder(@RequestBody @Validated @ApiParam(value = "saveOrder") OrderAddDTO addDTO){       JSONObject jsonObject = null;       service.saveOrder(jsonObject);   return ResponseResult.e(ResponseCode.OK,jsonObject);   }}