package cn.licoy.wdog.core.controller.appot;import cn.licoy.wdog.common.annotation.SysLogs;import cn.licoy.wdog.common.bean.ResponseCode;import cn.licoy.wdog.common.bean.ResponseResult;import cn.licoy.wdog.common.controller.AppotBaseController;import cn.licoy.wdog.common.util.Encrypt;import cn.licoy.wdog.common.util.GPSSUtils;import cn.licoy.wdog.core.dto.appot.FindVenueDTO;import cn.licoy.wdog.core.dto.appot.VenueAddDTO;import cn.licoy.wdog.core.entity.appot.Order;import cn.licoy.wdog.core.entity.appot.Venue;import cn.licoy.wdog.core.service.appot.VenueService;import com.baomidou.mybatisplus.mapper.EntityWrapper;import io.swagger.annotations.Api;import com.alibaba.fastjson.JSONObject;import io.swagger.annotations.ApiOperation;import io.swagger.annotations.ApiParam;import org.apache.http.client.HttpClient;import org.apache.http.client.ResponseHandler;import org.apache.http.client.methods.HttpGet;import org.apache.http.impl.client.BasicResponseHandler;import org.apache.http.impl.client.DefaultHttpClient;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.jdbc.core.BeanPropertyRowMapper;import org.springframework.jdbc.core.RowMapper;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.*;import java.util.Collections;import java.util.List;import java.util.Map;/** * @author mc * @version Fri Sep 25 16:39:55 2020 */@RestControllerpublic class VenueController extends AppotBaseController {   @Autowired   private VenueService service;   public VenueService getService() {      return service;   }   @RequestMapping(value = {"/getVenueById"})   @SysLogs("getVenueById")   public ResponseResult getVenueById(String id){      return ResponseResult.e(ResponseCode.OK,service.selectById(id));   }   @RequestMapping(value = {"/getVenues"})   @SysLogs("getVenues")   public ResponseResult getVenues(double lng1, double lat1 ,String searchInfo) {      List<FindVenueDTO> lists2 = null ;      try {           //微信公众号 获取经纬度, 针对百度地图做修正            HttpGet httpget = new HttpGet("http://api.map.baidu.com/ag/coord/convert?from=0&to=4&x="+lng1+"&y="+lat1);            ResponseHandler<String> responseHandler = new BasicResponseHandler();            HttpClient client = new DefaultHttpClient();;;            String response = client.execute(httpget, responseHandler);            JSONObject OpenidJSONO = JSONObject.parseObject(response);            String x = OpenidJSONO.get("x").toString();            String y = OpenidJSONO.get("y").toString();            x = Encrypt.base64Decode(x);            y = Encrypt.base64Decode(y);            EntityWrapper<Venue> wrapper = new EntityWrapper<>();            String sql ="select vd.product_id as productId,vd.site_id as siteId,vd.sport_type as sportType,v.id,v.img,v.venue_name as venueName,v.area,v.sales_price as salesPrice,v.price ,v.longitude ,v.latitude,vd.is_half as isHalf ,v.addres ,v.tel,v.id  from biz_venue_detail vd left join biz_venue v on vd.venue_id =v.id where vd.sport_type ='0'";            RowMapper<FindVenueDTO> rowMapper = new BeanPropertyRowMapper<FindVenueDTO>(FindVenueDTO.class);             lists2 = jdbcTemplate.query(sql,rowMapper);            for(FindVenueDTO venue:lists2){               venue.setDistance( GPSSUtils.getDistanceFrom2LngLat( Double.valueOf(x).doubleValue(),Double.valueOf(y).doubleValue(),venue.getLongitude(),venue.getLatitude() )  );            }            Collections.sort( lists2 );      }catch (Exception e){         e.printStackTrace();      }      return ResponseResult.e(ResponseCode.OK,lists2);   }}