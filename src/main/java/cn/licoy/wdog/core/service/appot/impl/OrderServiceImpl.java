package cn.licoy.wdog.core.service.appot.impl;import cn.licoy.wdog.core.dto.appot.FindOrderDTO;import cn.licoy.wdog.core.entity.appot.Order;import cn.licoy.wdog.core.mapper.appot.OrderMapper;import cn.licoy.wdog.core.service.appot.OrderService;import com.alibaba.fastjson.JSONObject;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.plugins.Page;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.jpay.util.StringUtils;import org.springframework.stereotype.Service;import java.util.List;/** * @author mc * @version Tue Sep 22 20:21:35 2020 */@Servicepublic class OrderServiceImpl extends ServiceImpl<OrderMapper, Order> implements OrderService {   @Override   public Page<Order> list(FindOrderDTO findDTO) {      return null;   }   @Override   public void saveOrder(JSONObject opidJsonObject) {   }   @Override   public void updateOrderPay(Order order) {      updateAllColumnById(order);   }   public Order getOrderByPay(String openId,String nonceStr){      EntityWrapper<Order> wrapper = new EntityWrapper<>();      wrapper.eq("openid",openId);      wrapper.eq("nonce_str",nonceStr );      List<Order> orders = selectList(wrapper);      if(!orders.isEmpty() ){         return orders.get(0);      }      return null;   }   @Override   public List<Order> checkPayOrderInvalid() {      EntityWrapper<Order> wrapper = new EntityWrapper<>();      wrapper.eq("status","0" );      return selectList(wrapper);   }   @Override   public List<Order> getOrdersByOpenid(String open_id,String status) {      String[] statusArray = StringUtils.split(status,",");      if(statusArray==null || statusArray.length==0){         statusArray =new String[]{"0","2"};      }      EntityWrapper<Order> wrapper = new EntityWrapper<>();      wrapper.eq("openid",open_id);      wrapper.in("status",statusArray);      wrapper.orderBy("create_date",false);      return selectList(wrapper);   }   @Override   public List<Order> getOrdersByStatus(String status) {      String[] statusArray = StringUtils.split(status,",");      EntityWrapper<Order> wrapper = new EntityWrapper<>();      wrapper.in("status",statusArray);      return selectList(wrapper);   }   @Override   public Order getOrderById(String orderid) {      return selectById(orderid);   }}